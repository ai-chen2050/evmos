// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package checkpointingv1

import (
	v1beta1 "cosmossdk.io/api/cosmos/base/query/v1beta1"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_QueryRawCheckpointListRequest            protoreflect.MessageDescriptor
	fd_QueryRawCheckpointListRequest_status     protoreflect.FieldDescriptor
	fd_QueryRawCheckpointListRequest_pagination protoreflect.FieldDescriptor
)

func init() {
	file_hetu_checkpointing_v1_query_proto_init()
	md_QueryRawCheckpointListRequest = File_hetu_checkpointing_v1_query_proto.Messages().ByName("QueryRawCheckpointListRequest")
	fd_QueryRawCheckpointListRequest_status = md_QueryRawCheckpointListRequest.Fields().ByName("status")
	fd_QueryRawCheckpointListRequest_pagination = md_QueryRawCheckpointListRequest.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryRawCheckpointListRequest)(nil)

type fastReflection_QueryRawCheckpointListRequest QueryRawCheckpointListRequest

func (x *QueryRawCheckpointListRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryRawCheckpointListRequest)(x)
}

func (x *QueryRawCheckpointListRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryRawCheckpointListRequest_messageType fastReflection_QueryRawCheckpointListRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryRawCheckpointListRequest_messageType{}

type fastReflection_QueryRawCheckpointListRequest_messageType struct{}

func (x fastReflection_QueryRawCheckpointListRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryRawCheckpointListRequest)(nil)
}
func (x fastReflection_QueryRawCheckpointListRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryRawCheckpointListRequest)
}
func (x fastReflection_QueryRawCheckpointListRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryRawCheckpointListRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryRawCheckpointListRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryRawCheckpointListRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryRawCheckpointListRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryRawCheckpointListRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryRawCheckpointListRequest) New() protoreflect.Message {
	return new(fastReflection_QueryRawCheckpointListRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryRawCheckpointListRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryRawCheckpointListRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryRawCheckpointListRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Status))
		if !f(fd_QueryRawCheckpointListRequest_status, value) {
			return
		}
	}
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryRawCheckpointListRequest_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryRawCheckpointListRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointListRequest.status":
		return x.Status != 0
	case "hetu.checkpointing.v1.QueryRawCheckpointListRequest.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointListRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointListRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryRawCheckpointListRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointListRequest.status":
		x.Status = 0
	case "hetu.checkpointing.v1.QueryRawCheckpointListRequest.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointListRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointListRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryRawCheckpointListRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointListRequest.status":
		value := x.Status
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "hetu.checkpointing.v1.QueryRawCheckpointListRequest.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointListRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointListRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryRawCheckpointListRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointListRequest.status":
		x.Status = (CheckpointStatus)(value.Enum())
	case "hetu.checkpointing.v1.QueryRawCheckpointListRequest.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageRequest)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointListRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointListRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryRawCheckpointListRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointListRequest.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageRequest)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	case "hetu.checkpointing.v1.QueryRawCheckpointListRequest.status":
		panic(fmt.Errorf("field status of message hetu.checkpointing.v1.QueryRawCheckpointListRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointListRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointListRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryRawCheckpointListRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointListRequest.status":
		return protoreflect.ValueOfEnum(0)
	case "hetu.checkpointing.v1.QueryRawCheckpointListRequest.pagination":
		m := new(v1beta1.PageRequest)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointListRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointListRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryRawCheckpointListRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in hetu.checkpointing.v1.QueryRawCheckpointListRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryRawCheckpointListRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryRawCheckpointListRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryRawCheckpointListRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryRawCheckpointListRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryRawCheckpointListRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryRawCheckpointListRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryRawCheckpointListRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryRawCheckpointListRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryRawCheckpointListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= CheckpointStatus(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageRequest{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryRawCheckpointListResponse_1_list)(nil)

type _QueryRawCheckpointListResponse_1_list struct {
	list *[]*RawCheckpointWithMetaResponse
}

func (x *_QueryRawCheckpointListResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryRawCheckpointListResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryRawCheckpointListResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*RawCheckpointWithMetaResponse)
	(*x.list)[i] = concreteValue
}

func (x *_QueryRawCheckpointListResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*RawCheckpointWithMetaResponse)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryRawCheckpointListResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(RawCheckpointWithMetaResponse)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryRawCheckpointListResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryRawCheckpointListResponse_1_list) NewElement() protoreflect.Value {
	v := new(RawCheckpointWithMetaResponse)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryRawCheckpointListResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryRawCheckpointListResponse                 protoreflect.MessageDescriptor
	fd_QueryRawCheckpointListResponse_raw_checkpoints protoreflect.FieldDescriptor
	fd_QueryRawCheckpointListResponse_pagination      protoreflect.FieldDescriptor
)

func init() {
	file_hetu_checkpointing_v1_query_proto_init()
	md_QueryRawCheckpointListResponse = File_hetu_checkpointing_v1_query_proto.Messages().ByName("QueryRawCheckpointListResponse")
	fd_QueryRawCheckpointListResponse_raw_checkpoints = md_QueryRawCheckpointListResponse.Fields().ByName("raw_checkpoints")
	fd_QueryRawCheckpointListResponse_pagination = md_QueryRawCheckpointListResponse.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryRawCheckpointListResponse)(nil)

type fastReflection_QueryRawCheckpointListResponse QueryRawCheckpointListResponse

func (x *QueryRawCheckpointListResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryRawCheckpointListResponse)(x)
}

func (x *QueryRawCheckpointListResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryRawCheckpointListResponse_messageType fastReflection_QueryRawCheckpointListResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryRawCheckpointListResponse_messageType{}

type fastReflection_QueryRawCheckpointListResponse_messageType struct{}

func (x fastReflection_QueryRawCheckpointListResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryRawCheckpointListResponse)(nil)
}
func (x fastReflection_QueryRawCheckpointListResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryRawCheckpointListResponse)
}
func (x fastReflection_QueryRawCheckpointListResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryRawCheckpointListResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryRawCheckpointListResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryRawCheckpointListResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryRawCheckpointListResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryRawCheckpointListResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryRawCheckpointListResponse) New() protoreflect.Message {
	return new(fastReflection_QueryRawCheckpointListResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryRawCheckpointListResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryRawCheckpointListResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryRawCheckpointListResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.RawCheckpoints) != 0 {
		value := protoreflect.ValueOfList(&_QueryRawCheckpointListResponse_1_list{list: &x.RawCheckpoints})
		if !f(fd_QueryRawCheckpointListResponse_raw_checkpoints, value) {
			return
		}
	}
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryRawCheckpointListResponse_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryRawCheckpointListResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointListResponse.raw_checkpoints":
		return len(x.RawCheckpoints) != 0
	case "hetu.checkpointing.v1.QueryRawCheckpointListResponse.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointListResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointListResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryRawCheckpointListResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointListResponse.raw_checkpoints":
		x.RawCheckpoints = nil
	case "hetu.checkpointing.v1.QueryRawCheckpointListResponse.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointListResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointListResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryRawCheckpointListResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointListResponse.raw_checkpoints":
		if len(x.RawCheckpoints) == 0 {
			return protoreflect.ValueOfList(&_QueryRawCheckpointListResponse_1_list{})
		}
		listValue := &_QueryRawCheckpointListResponse_1_list{list: &x.RawCheckpoints}
		return protoreflect.ValueOfList(listValue)
	case "hetu.checkpointing.v1.QueryRawCheckpointListResponse.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointListResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointListResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryRawCheckpointListResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointListResponse.raw_checkpoints":
		lv := value.List()
		clv := lv.(*_QueryRawCheckpointListResponse_1_list)
		x.RawCheckpoints = *clv.list
	case "hetu.checkpointing.v1.QueryRawCheckpointListResponse.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageResponse)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointListResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointListResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryRawCheckpointListResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointListResponse.raw_checkpoints":
		if x.RawCheckpoints == nil {
			x.RawCheckpoints = []*RawCheckpointWithMetaResponse{}
		}
		value := &_QueryRawCheckpointListResponse_1_list{list: &x.RawCheckpoints}
		return protoreflect.ValueOfList(value)
	case "hetu.checkpointing.v1.QueryRawCheckpointListResponse.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageResponse)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointListResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointListResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryRawCheckpointListResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointListResponse.raw_checkpoints":
		list := []*RawCheckpointWithMetaResponse{}
		return protoreflect.ValueOfList(&_QueryRawCheckpointListResponse_1_list{list: &list})
	case "hetu.checkpointing.v1.QueryRawCheckpointListResponse.pagination":
		m := new(v1beta1.PageResponse)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointListResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointListResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryRawCheckpointListResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in hetu.checkpointing.v1.QueryRawCheckpointListResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryRawCheckpointListResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryRawCheckpointListResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryRawCheckpointListResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryRawCheckpointListResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryRawCheckpointListResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.RawCheckpoints) > 0 {
			for _, e := range x.RawCheckpoints {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryRawCheckpointListResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.RawCheckpoints) > 0 {
			for iNdEx := len(x.RawCheckpoints) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.RawCheckpoints[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryRawCheckpointListResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryRawCheckpointListResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryRawCheckpointListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RawCheckpoints", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RawCheckpoints = append(x.RawCheckpoints, &RawCheckpointWithMetaResponse{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.RawCheckpoints[len(x.RawCheckpoints)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageResponse{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryRawCheckpointRequest           protoreflect.MessageDescriptor
	fd_QueryRawCheckpointRequest_epoch_num protoreflect.FieldDescriptor
)

func init() {
	file_hetu_checkpointing_v1_query_proto_init()
	md_QueryRawCheckpointRequest = File_hetu_checkpointing_v1_query_proto.Messages().ByName("QueryRawCheckpointRequest")
	fd_QueryRawCheckpointRequest_epoch_num = md_QueryRawCheckpointRequest.Fields().ByName("epoch_num")
}

var _ protoreflect.Message = (*fastReflection_QueryRawCheckpointRequest)(nil)

type fastReflection_QueryRawCheckpointRequest QueryRawCheckpointRequest

func (x *QueryRawCheckpointRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryRawCheckpointRequest)(x)
}

func (x *QueryRawCheckpointRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryRawCheckpointRequest_messageType fastReflection_QueryRawCheckpointRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryRawCheckpointRequest_messageType{}

type fastReflection_QueryRawCheckpointRequest_messageType struct{}

func (x fastReflection_QueryRawCheckpointRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryRawCheckpointRequest)(nil)
}
func (x fastReflection_QueryRawCheckpointRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryRawCheckpointRequest)
}
func (x fastReflection_QueryRawCheckpointRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryRawCheckpointRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryRawCheckpointRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryRawCheckpointRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryRawCheckpointRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryRawCheckpointRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryRawCheckpointRequest) New() protoreflect.Message {
	return new(fastReflection_QueryRawCheckpointRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryRawCheckpointRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryRawCheckpointRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryRawCheckpointRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.EpochNum != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EpochNum)
		if !f(fd_QueryRawCheckpointRequest_epoch_num, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryRawCheckpointRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointRequest.epoch_num":
		return x.EpochNum != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryRawCheckpointRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointRequest.epoch_num":
		x.EpochNum = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryRawCheckpointRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointRequest.epoch_num":
		value := x.EpochNum
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryRawCheckpointRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointRequest.epoch_num":
		x.EpochNum = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryRawCheckpointRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointRequest.epoch_num":
		panic(fmt.Errorf("field epoch_num of message hetu.checkpointing.v1.QueryRawCheckpointRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryRawCheckpointRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointRequest.epoch_num":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryRawCheckpointRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in hetu.checkpointing.v1.QueryRawCheckpointRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryRawCheckpointRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryRawCheckpointRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryRawCheckpointRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryRawCheckpointRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryRawCheckpointRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.EpochNum != 0 {
			n += 1 + runtime.Sov(uint64(x.EpochNum))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryRawCheckpointRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.EpochNum != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EpochNum))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryRawCheckpointRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryRawCheckpointRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryRawCheckpointRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EpochNum", wireType)
				}
				x.EpochNum = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EpochNum |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryRawCheckpointResponse                protoreflect.MessageDescriptor
	fd_QueryRawCheckpointResponse_raw_checkpoint protoreflect.FieldDescriptor
)

func init() {
	file_hetu_checkpointing_v1_query_proto_init()
	md_QueryRawCheckpointResponse = File_hetu_checkpointing_v1_query_proto.Messages().ByName("QueryRawCheckpointResponse")
	fd_QueryRawCheckpointResponse_raw_checkpoint = md_QueryRawCheckpointResponse.Fields().ByName("raw_checkpoint")
}

var _ protoreflect.Message = (*fastReflection_QueryRawCheckpointResponse)(nil)

type fastReflection_QueryRawCheckpointResponse QueryRawCheckpointResponse

func (x *QueryRawCheckpointResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryRawCheckpointResponse)(x)
}

func (x *QueryRawCheckpointResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryRawCheckpointResponse_messageType fastReflection_QueryRawCheckpointResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryRawCheckpointResponse_messageType{}

type fastReflection_QueryRawCheckpointResponse_messageType struct{}

func (x fastReflection_QueryRawCheckpointResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryRawCheckpointResponse)(nil)
}
func (x fastReflection_QueryRawCheckpointResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryRawCheckpointResponse)
}
func (x fastReflection_QueryRawCheckpointResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryRawCheckpointResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryRawCheckpointResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryRawCheckpointResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryRawCheckpointResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryRawCheckpointResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryRawCheckpointResponse) New() protoreflect.Message {
	return new(fastReflection_QueryRawCheckpointResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryRawCheckpointResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryRawCheckpointResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryRawCheckpointResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.RawCheckpoint != nil {
		value := protoreflect.ValueOfMessage(x.RawCheckpoint.ProtoReflect())
		if !f(fd_QueryRawCheckpointResponse_raw_checkpoint, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryRawCheckpointResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointResponse.raw_checkpoint":
		return x.RawCheckpoint != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryRawCheckpointResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointResponse.raw_checkpoint":
		x.RawCheckpoint = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryRawCheckpointResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointResponse.raw_checkpoint":
		value := x.RawCheckpoint
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryRawCheckpointResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointResponse.raw_checkpoint":
		x.RawCheckpoint = value.Message().Interface().(*RawCheckpointWithMetaResponse)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryRawCheckpointResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointResponse.raw_checkpoint":
		if x.RawCheckpoint == nil {
			x.RawCheckpoint = new(RawCheckpointWithMetaResponse)
		}
		return protoreflect.ValueOfMessage(x.RawCheckpoint.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryRawCheckpointResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryRawCheckpointResponse.raw_checkpoint":
		m := new(RawCheckpointWithMetaResponse)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryRawCheckpointResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryRawCheckpointResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryRawCheckpointResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in hetu.checkpointing.v1.QueryRawCheckpointResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryRawCheckpointResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryRawCheckpointResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryRawCheckpointResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryRawCheckpointResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryRawCheckpointResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.RawCheckpoint != nil {
			l = options.Size(x.RawCheckpoint)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryRawCheckpointResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.RawCheckpoint != nil {
			encoded, err := options.Marshal(x.RawCheckpoint)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryRawCheckpointResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryRawCheckpointResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryRawCheckpointResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RawCheckpoint", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.RawCheckpoint == nil {
					x.RawCheckpoint = &RawCheckpointWithMetaResponse{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.RawCheckpoint); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryBlsPublicKeyListRequest            protoreflect.MessageDescriptor
	fd_QueryBlsPublicKeyListRequest_epoch_num  protoreflect.FieldDescriptor
	fd_QueryBlsPublicKeyListRequest_pagination protoreflect.FieldDescriptor
)

func init() {
	file_hetu_checkpointing_v1_query_proto_init()
	md_QueryBlsPublicKeyListRequest = File_hetu_checkpointing_v1_query_proto.Messages().ByName("QueryBlsPublicKeyListRequest")
	fd_QueryBlsPublicKeyListRequest_epoch_num = md_QueryBlsPublicKeyListRequest.Fields().ByName("epoch_num")
	fd_QueryBlsPublicKeyListRequest_pagination = md_QueryBlsPublicKeyListRequest.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryBlsPublicKeyListRequest)(nil)

type fastReflection_QueryBlsPublicKeyListRequest QueryBlsPublicKeyListRequest

func (x *QueryBlsPublicKeyListRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryBlsPublicKeyListRequest)(x)
}

func (x *QueryBlsPublicKeyListRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryBlsPublicKeyListRequest_messageType fastReflection_QueryBlsPublicKeyListRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryBlsPublicKeyListRequest_messageType{}

type fastReflection_QueryBlsPublicKeyListRequest_messageType struct{}

func (x fastReflection_QueryBlsPublicKeyListRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryBlsPublicKeyListRequest)(nil)
}
func (x fastReflection_QueryBlsPublicKeyListRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryBlsPublicKeyListRequest)
}
func (x fastReflection_QueryBlsPublicKeyListRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryBlsPublicKeyListRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryBlsPublicKeyListRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryBlsPublicKeyListRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryBlsPublicKeyListRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryBlsPublicKeyListRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryBlsPublicKeyListRequest) New() protoreflect.Message {
	return new(fastReflection_QueryBlsPublicKeyListRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryBlsPublicKeyListRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryBlsPublicKeyListRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryBlsPublicKeyListRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.EpochNum != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EpochNum)
		if !f(fd_QueryBlsPublicKeyListRequest_epoch_num, value) {
			return
		}
	}
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryBlsPublicKeyListRequest_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryBlsPublicKeyListRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListRequest.epoch_num":
		return x.EpochNum != uint64(0)
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListRequest.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryBlsPublicKeyListRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryBlsPublicKeyListRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryBlsPublicKeyListRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListRequest.epoch_num":
		x.EpochNum = uint64(0)
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListRequest.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryBlsPublicKeyListRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryBlsPublicKeyListRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryBlsPublicKeyListRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListRequest.epoch_num":
		value := x.EpochNum
		return protoreflect.ValueOfUint64(value)
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListRequest.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryBlsPublicKeyListRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryBlsPublicKeyListRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryBlsPublicKeyListRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListRequest.epoch_num":
		x.EpochNum = value.Uint()
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListRequest.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageRequest)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryBlsPublicKeyListRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryBlsPublicKeyListRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryBlsPublicKeyListRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListRequest.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageRequest)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListRequest.epoch_num":
		panic(fmt.Errorf("field epoch_num of message hetu.checkpointing.v1.QueryBlsPublicKeyListRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryBlsPublicKeyListRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryBlsPublicKeyListRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryBlsPublicKeyListRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListRequest.epoch_num":
		return protoreflect.ValueOfUint64(uint64(0))
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListRequest.pagination":
		m := new(v1beta1.PageRequest)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryBlsPublicKeyListRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryBlsPublicKeyListRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryBlsPublicKeyListRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in hetu.checkpointing.v1.QueryBlsPublicKeyListRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryBlsPublicKeyListRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryBlsPublicKeyListRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryBlsPublicKeyListRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryBlsPublicKeyListRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryBlsPublicKeyListRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.EpochNum != 0 {
			n += 1 + runtime.Sov(uint64(x.EpochNum))
		}
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryBlsPublicKeyListRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.EpochNum != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EpochNum))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryBlsPublicKeyListRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryBlsPublicKeyListRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryBlsPublicKeyListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EpochNum", wireType)
				}
				x.EpochNum = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EpochNum |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageRequest{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_BlsPublicKeyListResponse                   protoreflect.MessageDescriptor
	fd_BlsPublicKeyListResponse_validator_address protoreflect.FieldDescriptor
	fd_BlsPublicKeyListResponse_bls_pub_key_hex   protoreflect.FieldDescriptor
	fd_BlsPublicKeyListResponse_voting_power      protoreflect.FieldDescriptor
)

func init() {
	file_hetu_checkpointing_v1_query_proto_init()
	md_BlsPublicKeyListResponse = File_hetu_checkpointing_v1_query_proto.Messages().ByName("BlsPublicKeyListResponse")
	fd_BlsPublicKeyListResponse_validator_address = md_BlsPublicKeyListResponse.Fields().ByName("validator_address")
	fd_BlsPublicKeyListResponse_bls_pub_key_hex = md_BlsPublicKeyListResponse.Fields().ByName("bls_pub_key_hex")
	fd_BlsPublicKeyListResponse_voting_power = md_BlsPublicKeyListResponse.Fields().ByName("voting_power")
}

var _ protoreflect.Message = (*fastReflection_BlsPublicKeyListResponse)(nil)

type fastReflection_BlsPublicKeyListResponse BlsPublicKeyListResponse

func (x *BlsPublicKeyListResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_BlsPublicKeyListResponse)(x)
}

func (x *BlsPublicKeyListResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_BlsPublicKeyListResponse_messageType fastReflection_BlsPublicKeyListResponse_messageType
var _ protoreflect.MessageType = fastReflection_BlsPublicKeyListResponse_messageType{}

type fastReflection_BlsPublicKeyListResponse_messageType struct{}

func (x fastReflection_BlsPublicKeyListResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_BlsPublicKeyListResponse)(nil)
}
func (x fastReflection_BlsPublicKeyListResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_BlsPublicKeyListResponse)
}
func (x fastReflection_BlsPublicKeyListResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_BlsPublicKeyListResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_BlsPublicKeyListResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_BlsPublicKeyListResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_BlsPublicKeyListResponse) Type() protoreflect.MessageType {
	return _fastReflection_BlsPublicKeyListResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_BlsPublicKeyListResponse) New() protoreflect.Message {
	return new(fastReflection_BlsPublicKeyListResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_BlsPublicKeyListResponse) Interface() protoreflect.ProtoMessage {
	return (*BlsPublicKeyListResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_BlsPublicKeyListResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ValidatorAddress != "" {
		value := protoreflect.ValueOfString(x.ValidatorAddress)
		if !f(fd_BlsPublicKeyListResponse_validator_address, value) {
			return
		}
	}
	if x.BlsPubKeyHex != "" {
		value := protoreflect.ValueOfString(x.BlsPubKeyHex)
		if !f(fd_BlsPublicKeyListResponse_bls_pub_key_hex, value) {
			return
		}
	}
	if x.VotingPower != uint64(0) {
		value := protoreflect.ValueOfUint64(x.VotingPower)
		if !f(fd_BlsPublicKeyListResponse_voting_power, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_BlsPublicKeyListResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.BlsPublicKeyListResponse.validator_address":
		return x.ValidatorAddress != ""
	case "hetu.checkpointing.v1.BlsPublicKeyListResponse.bls_pub_key_hex":
		return x.BlsPubKeyHex != ""
	case "hetu.checkpointing.v1.BlsPublicKeyListResponse.voting_power":
		return x.VotingPower != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.BlsPublicKeyListResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.BlsPublicKeyListResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlsPublicKeyListResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.BlsPublicKeyListResponse.validator_address":
		x.ValidatorAddress = ""
	case "hetu.checkpointing.v1.BlsPublicKeyListResponse.bls_pub_key_hex":
		x.BlsPubKeyHex = ""
	case "hetu.checkpointing.v1.BlsPublicKeyListResponse.voting_power":
		x.VotingPower = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.BlsPublicKeyListResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.BlsPublicKeyListResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_BlsPublicKeyListResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "hetu.checkpointing.v1.BlsPublicKeyListResponse.validator_address":
		value := x.ValidatorAddress
		return protoreflect.ValueOfString(value)
	case "hetu.checkpointing.v1.BlsPublicKeyListResponse.bls_pub_key_hex":
		value := x.BlsPubKeyHex
		return protoreflect.ValueOfString(value)
	case "hetu.checkpointing.v1.BlsPublicKeyListResponse.voting_power":
		value := x.VotingPower
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.BlsPublicKeyListResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.BlsPublicKeyListResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlsPublicKeyListResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.BlsPublicKeyListResponse.validator_address":
		x.ValidatorAddress = value.Interface().(string)
	case "hetu.checkpointing.v1.BlsPublicKeyListResponse.bls_pub_key_hex":
		x.BlsPubKeyHex = value.Interface().(string)
	case "hetu.checkpointing.v1.BlsPublicKeyListResponse.voting_power":
		x.VotingPower = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.BlsPublicKeyListResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.BlsPublicKeyListResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlsPublicKeyListResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.BlsPublicKeyListResponse.validator_address":
		panic(fmt.Errorf("field validator_address of message hetu.checkpointing.v1.BlsPublicKeyListResponse is not mutable"))
	case "hetu.checkpointing.v1.BlsPublicKeyListResponse.bls_pub_key_hex":
		panic(fmt.Errorf("field bls_pub_key_hex of message hetu.checkpointing.v1.BlsPublicKeyListResponse is not mutable"))
	case "hetu.checkpointing.v1.BlsPublicKeyListResponse.voting_power":
		panic(fmt.Errorf("field voting_power of message hetu.checkpointing.v1.BlsPublicKeyListResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.BlsPublicKeyListResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.BlsPublicKeyListResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_BlsPublicKeyListResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.BlsPublicKeyListResponse.validator_address":
		return protoreflect.ValueOfString("")
	case "hetu.checkpointing.v1.BlsPublicKeyListResponse.bls_pub_key_hex":
		return protoreflect.ValueOfString("")
	case "hetu.checkpointing.v1.BlsPublicKeyListResponse.voting_power":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.BlsPublicKeyListResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.BlsPublicKeyListResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_BlsPublicKeyListResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in hetu.checkpointing.v1.BlsPublicKeyListResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_BlsPublicKeyListResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlsPublicKeyListResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_BlsPublicKeyListResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_BlsPublicKeyListResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*BlsPublicKeyListResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ValidatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BlsPubKeyHex)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.VotingPower != 0 {
			n += 1 + runtime.Sov(uint64(x.VotingPower))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*BlsPublicKeyListResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.VotingPower != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.VotingPower))
			i--
			dAtA[i] = 0x18
		}
		if len(x.BlsPubKeyHex) > 0 {
			i -= len(x.BlsPubKeyHex)
			copy(dAtA[i:], x.BlsPubKeyHex)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BlsPubKeyHex)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ValidatorAddress) > 0 {
			i -= len(x.ValidatorAddress)
			copy(dAtA[i:], x.ValidatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ValidatorAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*BlsPublicKeyListResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BlsPublicKeyListResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BlsPublicKeyListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValidatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlsPubKeyHex", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BlsPubKeyHex = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VotingPower", wireType)
				}
				x.VotingPower = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.VotingPower |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryBlsPublicKeyListResponse_1_list)(nil)

type _QueryBlsPublicKeyListResponse_1_list struct {
	list *[]*BlsPublicKeyListResponse
}

func (x *_QueryBlsPublicKeyListResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryBlsPublicKeyListResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryBlsPublicKeyListResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BlsPublicKeyListResponse)
	(*x.list)[i] = concreteValue
}

func (x *_QueryBlsPublicKeyListResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BlsPublicKeyListResponse)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryBlsPublicKeyListResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(BlsPublicKeyListResponse)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryBlsPublicKeyListResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryBlsPublicKeyListResponse_1_list) NewElement() protoreflect.Value {
	v := new(BlsPublicKeyListResponse)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryBlsPublicKeyListResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryBlsPublicKeyListResponse                         protoreflect.MessageDescriptor
	fd_QueryBlsPublicKeyListResponse_validator_with_bls_keys protoreflect.FieldDescriptor
	fd_QueryBlsPublicKeyListResponse_pagination              protoreflect.FieldDescriptor
)

func init() {
	file_hetu_checkpointing_v1_query_proto_init()
	md_QueryBlsPublicKeyListResponse = File_hetu_checkpointing_v1_query_proto.Messages().ByName("QueryBlsPublicKeyListResponse")
	fd_QueryBlsPublicKeyListResponse_validator_with_bls_keys = md_QueryBlsPublicKeyListResponse.Fields().ByName("validator_with_bls_keys")
	fd_QueryBlsPublicKeyListResponse_pagination = md_QueryBlsPublicKeyListResponse.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryBlsPublicKeyListResponse)(nil)

type fastReflection_QueryBlsPublicKeyListResponse QueryBlsPublicKeyListResponse

func (x *QueryBlsPublicKeyListResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryBlsPublicKeyListResponse)(x)
}

func (x *QueryBlsPublicKeyListResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryBlsPublicKeyListResponse_messageType fastReflection_QueryBlsPublicKeyListResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryBlsPublicKeyListResponse_messageType{}

type fastReflection_QueryBlsPublicKeyListResponse_messageType struct{}

func (x fastReflection_QueryBlsPublicKeyListResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryBlsPublicKeyListResponse)(nil)
}
func (x fastReflection_QueryBlsPublicKeyListResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryBlsPublicKeyListResponse)
}
func (x fastReflection_QueryBlsPublicKeyListResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryBlsPublicKeyListResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryBlsPublicKeyListResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryBlsPublicKeyListResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryBlsPublicKeyListResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryBlsPublicKeyListResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryBlsPublicKeyListResponse) New() protoreflect.Message {
	return new(fastReflection_QueryBlsPublicKeyListResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryBlsPublicKeyListResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryBlsPublicKeyListResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryBlsPublicKeyListResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.ValidatorWithBlsKeys) != 0 {
		value := protoreflect.ValueOfList(&_QueryBlsPublicKeyListResponse_1_list{list: &x.ValidatorWithBlsKeys})
		if !f(fd_QueryBlsPublicKeyListResponse_validator_with_bls_keys, value) {
			return
		}
	}
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryBlsPublicKeyListResponse_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryBlsPublicKeyListResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListResponse.validator_with_bls_keys":
		return len(x.ValidatorWithBlsKeys) != 0
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListResponse.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryBlsPublicKeyListResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryBlsPublicKeyListResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryBlsPublicKeyListResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListResponse.validator_with_bls_keys":
		x.ValidatorWithBlsKeys = nil
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListResponse.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryBlsPublicKeyListResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryBlsPublicKeyListResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryBlsPublicKeyListResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListResponse.validator_with_bls_keys":
		if len(x.ValidatorWithBlsKeys) == 0 {
			return protoreflect.ValueOfList(&_QueryBlsPublicKeyListResponse_1_list{})
		}
		listValue := &_QueryBlsPublicKeyListResponse_1_list{list: &x.ValidatorWithBlsKeys}
		return protoreflect.ValueOfList(listValue)
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListResponse.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryBlsPublicKeyListResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryBlsPublicKeyListResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryBlsPublicKeyListResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListResponse.validator_with_bls_keys":
		lv := value.List()
		clv := lv.(*_QueryBlsPublicKeyListResponse_1_list)
		x.ValidatorWithBlsKeys = *clv.list
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListResponse.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageResponse)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryBlsPublicKeyListResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryBlsPublicKeyListResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryBlsPublicKeyListResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListResponse.validator_with_bls_keys":
		if x.ValidatorWithBlsKeys == nil {
			x.ValidatorWithBlsKeys = []*BlsPublicKeyListResponse{}
		}
		value := &_QueryBlsPublicKeyListResponse_1_list{list: &x.ValidatorWithBlsKeys}
		return protoreflect.ValueOfList(value)
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListResponse.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageResponse)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryBlsPublicKeyListResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryBlsPublicKeyListResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryBlsPublicKeyListResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListResponse.validator_with_bls_keys":
		list := []*BlsPublicKeyListResponse{}
		return protoreflect.ValueOfList(&_QueryBlsPublicKeyListResponse_1_list{list: &list})
	case "hetu.checkpointing.v1.QueryBlsPublicKeyListResponse.pagination":
		m := new(v1beta1.PageResponse)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryBlsPublicKeyListResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryBlsPublicKeyListResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryBlsPublicKeyListResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in hetu.checkpointing.v1.QueryBlsPublicKeyListResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryBlsPublicKeyListResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryBlsPublicKeyListResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryBlsPublicKeyListResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryBlsPublicKeyListResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryBlsPublicKeyListResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.ValidatorWithBlsKeys) > 0 {
			for _, e := range x.ValidatorWithBlsKeys {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryBlsPublicKeyListResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ValidatorWithBlsKeys) > 0 {
			for iNdEx := len(x.ValidatorWithBlsKeys) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ValidatorWithBlsKeys[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryBlsPublicKeyListResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryBlsPublicKeyListResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryBlsPublicKeyListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidatorWithBlsKeys", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValidatorWithBlsKeys = append(x.ValidatorWithBlsKeys, &BlsPublicKeyListResponse{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ValidatorWithBlsKeys[len(x.ValidatorWithBlsKeys)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageResponse{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryEpochStatusRequest           protoreflect.MessageDescriptor
	fd_QueryEpochStatusRequest_epoch_num protoreflect.FieldDescriptor
)

func init() {
	file_hetu_checkpointing_v1_query_proto_init()
	md_QueryEpochStatusRequest = File_hetu_checkpointing_v1_query_proto.Messages().ByName("QueryEpochStatusRequest")
	fd_QueryEpochStatusRequest_epoch_num = md_QueryEpochStatusRequest.Fields().ByName("epoch_num")
}

var _ protoreflect.Message = (*fastReflection_QueryEpochStatusRequest)(nil)

type fastReflection_QueryEpochStatusRequest QueryEpochStatusRequest

func (x *QueryEpochStatusRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryEpochStatusRequest)(x)
}

func (x *QueryEpochStatusRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryEpochStatusRequest_messageType fastReflection_QueryEpochStatusRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryEpochStatusRequest_messageType{}

type fastReflection_QueryEpochStatusRequest_messageType struct{}

func (x fastReflection_QueryEpochStatusRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryEpochStatusRequest)(nil)
}
func (x fastReflection_QueryEpochStatusRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryEpochStatusRequest)
}
func (x fastReflection_QueryEpochStatusRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEpochStatusRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryEpochStatusRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEpochStatusRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryEpochStatusRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryEpochStatusRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryEpochStatusRequest) New() protoreflect.Message {
	return new(fastReflection_QueryEpochStatusRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryEpochStatusRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryEpochStatusRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryEpochStatusRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.EpochNum != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EpochNum)
		if !f(fd_QueryEpochStatusRequest_epoch_num, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryEpochStatusRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryEpochStatusRequest.epoch_num":
		return x.EpochNum != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryEpochStatusRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryEpochStatusRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEpochStatusRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryEpochStatusRequest.epoch_num":
		x.EpochNum = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryEpochStatusRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryEpochStatusRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryEpochStatusRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "hetu.checkpointing.v1.QueryEpochStatusRequest.epoch_num":
		value := x.EpochNum
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryEpochStatusRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryEpochStatusRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEpochStatusRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryEpochStatusRequest.epoch_num":
		x.EpochNum = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryEpochStatusRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryEpochStatusRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEpochStatusRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryEpochStatusRequest.epoch_num":
		panic(fmt.Errorf("field epoch_num of message hetu.checkpointing.v1.QueryEpochStatusRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryEpochStatusRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryEpochStatusRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryEpochStatusRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryEpochStatusRequest.epoch_num":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryEpochStatusRequest"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryEpochStatusRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryEpochStatusRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in hetu.checkpointing.v1.QueryEpochStatusRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryEpochStatusRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEpochStatusRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryEpochStatusRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryEpochStatusRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryEpochStatusRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.EpochNum != 0 {
			n += 1 + runtime.Sov(uint64(x.EpochNum))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryEpochStatusRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.EpochNum != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EpochNum))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryEpochStatusRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEpochStatusRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEpochStatusRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EpochNum", wireType)
				}
				x.EpochNum = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EpochNum |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryEpochStatusResponse        protoreflect.MessageDescriptor
	fd_QueryEpochStatusResponse_status protoreflect.FieldDescriptor
)

func init() {
	file_hetu_checkpointing_v1_query_proto_init()
	md_QueryEpochStatusResponse = File_hetu_checkpointing_v1_query_proto.Messages().ByName("QueryEpochStatusResponse")
	fd_QueryEpochStatusResponse_status = md_QueryEpochStatusResponse.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_QueryEpochStatusResponse)(nil)

type fastReflection_QueryEpochStatusResponse QueryEpochStatusResponse

func (x *QueryEpochStatusResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryEpochStatusResponse)(x)
}

func (x *QueryEpochStatusResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryEpochStatusResponse_messageType fastReflection_QueryEpochStatusResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryEpochStatusResponse_messageType{}

type fastReflection_QueryEpochStatusResponse_messageType struct{}

func (x fastReflection_QueryEpochStatusResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryEpochStatusResponse)(nil)
}
func (x fastReflection_QueryEpochStatusResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryEpochStatusResponse)
}
func (x fastReflection_QueryEpochStatusResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEpochStatusResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryEpochStatusResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEpochStatusResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryEpochStatusResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryEpochStatusResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryEpochStatusResponse) New() protoreflect.Message {
	return new(fastReflection_QueryEpochStatusResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryEpochStatusResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryEpochStatusResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryEpochStatusResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Status))
		if !f(fd_QueryEpochStatusResponse_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryEpochStatusResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryEpochStatusResponse.status":
		return x.Status != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryEpochStatusResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryEpochStatusResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEpochStatusResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryEpochStatusResponse.status":
		x.Status = 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryEpochStatusResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryEpochStatusResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryEpochStatusResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "hetu.checkpointing.v1.QueryEpochStatusResponse.status":
		value := x.Status
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryEpochStatusResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryEpochStatusResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEpochStatusResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryEpochStatusResponse.status":
		x.Status = (CheckpointStatus)(value.Enum())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryEpochStatusResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryEpochStatusResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEpochStatusResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryEpochStatusResponse.status":
		panic(fmt.Errorf("field status of message hetu.checkpointing.v1.QueryEpochStatusResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryEpochStatusResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryEpochStatusResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryEpochStatusResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.QueryEpochStatusResponse.status":
		return protoreflect.ValueOfEnum(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.QueryEpochStatusResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.QueryEpochStatusResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryEpochStatusResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in hetu.checkpointing.v1.QueryEpochStatusResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryEpochStatusResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEpochStatusResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryEpochStatusResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryEpochStatusResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryEpochStatusResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryEpochStatusResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryEpochStatusResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEpochStatusResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEpochStatusResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= CheckpointStatus(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_RawCheckpointResponse                protoreflect.MessageDescriptor
	fd_RawCheckpointResponse_epoch_num      protoreflect.FieldDescriptor
	fd_RawCheckpointResponse_block_hash_hex protoreflect.FieldDescriptor
	fd_RawCheckpointResponse_bitmap         protoreflect.FieldDescriptor
	fd_RawCheckpointResponse_bls_multi_sig  protoreflect.FieldDescriptor
)

func init() {
	file_hetu_checkpointing_v1_query_proto_init()
	md_RawCheckpointResponse = File_hetu_checkpointing_v1_query_proto.Messages().ByName("RawCheckpointResponse")
	fd_RawCheckpointResponse_epoch_num = md_RawCheckpointResponse.Fields().ByName("epoch_num")
	fd_RawCheckpointResponse_block_hash_hex = md_RawCheckpointResponse.Fields().ByName("block_hash_hex")
	fd_RawCheckpointResponse_bitmap = md_RawCheckpointResponse.Fields().ByName("bitmap")
	fd_RawCheckpointResponse_bls_multi_sig = md_RawCheckpointResponse.Fields().ByName("bls_multi_sig")
}

var _ protoreflect.Message = (*fastReflection_RawCheckpointResponse)(nil)

type fastReflection_RawCheckpointResponse RawCheckpointResponse

func (x *RawCheckpointResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_RawCheckpointResponse)(x)
}

func (x *RawCheckpointResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_RawCheckpointResponse_messageType fastReflection_RawCheckpointResponse_messageType
var _ protoreflect.MessageType = fastReflection_RawCheckpointResponse_messageType{}

type fastReflection_RawCheckpointResponse_messageType struct{}

func (x fastReflection_RawCheckpointResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_RawCheckpointResponse)(nil)
}
func (x fastReflection_RawCheckpointResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_RawCheckpointResponse)
}
func (x fastReflection_RawCheckpointResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_RawCheckpointResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_RawCheckpointResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_RawCheckpointResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_RawCheckpointResponse) Type() protoreflect.MessageType {
	return _fastReflection_RawCheckpointResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_RawCheckpointResponse) New() protoreflect.Message {
	return new(fastReflection_RawCheckpointResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_RawCheckpointResponse) Interface() protoreflect.ProtoMessage {
	return (*RawCheckpointResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_RawCheckpointResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.EpochNum != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EpochNum)
		if !f(fd_RawCheckpointResponse_epoch_num, value) {
			return
		}
	}
	if x.BlockHashHex != "" {
		value := protoreflect.ValueOfString(x.BlockHashHex)
		if !f(fd_RawCheckpointResponse_block_hash_hex, value) {
			return
		}
	}
	if len(x.Bitmap) != 0 {
		value := protoreflect.ValueOfBytes(x.Bitmap)
		if !f(fd_RawCheckpointResponse_bitmap, value) {
			return
		}
	}
	if len(x.BlsMultiSig) != 0 {
		value := protoreflect.ValueOfBytes(x.BlsMultiSig)
		if !f(fd_RawCheckpointResponse_bls_multi_sig, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_RawCheckpointResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.RawCheckpointResponse.epoch_num":
		return x.EpochNum != uint64(0)
	case "hetu.checkpointing.v1.RawCheckpointResponse.block_hash_hex":
		return x.BlockHashHex != ""
	case "hetu.checkpointing.v1.RawCheckpointResponse.bitmap":
		return len(x.Bitmap) != 0
	case "hetu.checkpointing.v1.RawCheckpointResponse.bls_multi_sig":
		return len(x.BlsMultiSig) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.RawCheckpointResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.RawCheckpointResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RawCheckpointResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.RawCheckpointResponse.epoch_num":
		x.EpochNum = uint64(0)
	case "hetu.checkpointing.v1.RawCheckpointResponse.block_hash_hex":
		x.BlockHashHex = ""
	case "hetu.checkpointing.v1.RawCheckpointResponse.bitmap":
		x.Bitmap = nil
	case "hetu.checkpointing.v1.RawCheckpointResponse.bls_multi_sig":
		x.BlsMultiSig = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.RawCheckpointResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.RawCheckpointResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_RawCheckpointResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "hetu.checkpointing.v1.RawCheckpointResponse.epoch_num":
		value := x.EpochNum
		return protoreflect.ValueOfUint64(value)
	case "hetu.checkpointing.v1.RawCheckpointResponse.block_hash_hex":
		value := x.BlockHashHex
		return protoreflect.ValueOfString(value)
	case "hetu.checkpointing.v1.RawCheckpointResponse.bitmap":
		value := x.Bitmap
		return protoreflect.ValueOfBytes(value)
	case "hetu.checkpointing.v1.RawCheckpointResponse.bls_multi_sig":
		value := x.BlsMultiSig
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.RawCheckpointResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.RawCheckpointResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RawCheckpointResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.RawCheckpointResponse.epoch_num":
		x.EpochNum = value.Uint()
	case "hetu.checkpointing.v1.RawCheckpointResponse.block_hash_hex":
		x.BlockHashHex = value.Interface().(string)
	case "hetu.checkpointing.v1.RawCheckpointResponse.bitmap":
		x.Bitmap = value.Bytes()
	case "hetu.checkpointing.v1.RawCheckpointResponse.bls_multi_sig":
		x.BlsMultiSig = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.RawCheckpointResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.RawCheckpointResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RawCheckpointResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.RawCheckpointResponse.epoch_num":
		panic(fmt.Errorf("field epoch_num of message hetu.checkpointing.v1.RawCheckpointResponse is not mutable"))
	case "hetu.checkpointing.v1.RawCheckpointResponse.block_hash_hex":
		panic(fmt.Errorf("field block_hash_hex of message hetu.checkpointing.v1.RawCheckpointResponse is not mutable"))
	case "hetu.checkpointing.v1.RawCheckpointResponse.bitmap":
		panic(fmt.Errorf("field bitmap of message hetu.checkpointing.v1.RawCheckpointResponse is not mutable"))
	case "hetu.checkpointing.v1.RawCheckpointResponse.bls_multi_sig":
		panic(fmt.Errorf("field bls_multi_sig of message hetu.checkpointing.v1.RawCheckpointResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.RawCheckpointResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.RawCheckpointResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_RawCheckpointResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.RawCheckpointResponse.epoch_num":
		return protoreflect.ValueOfUint64(uint64(0))
	case "hetu.checkpointing.v1.RawCheckpointResponse.block_hash_hex":
		return protoreflect.ValueOfString("")
	case "hetu.checkpointing.v1.RawCheckpointResponse.bitmap":
		return protoreflect.ValueOfBytes(nil)
	case "hetu.checkpointing.v1.RawCheckpointResponse.bls_multi_sig":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.RawCheckpointResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.RawCheckpointResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_RawCheckpointResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in hetu.checkpointing.v1.RawCheckpointResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_RawCheckpointResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RawCheckpointResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_RawCheckpointResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_RawCheckpointResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*RawCheckpointResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.EpochNum != 0 {
			n += 1 + runtime.Sov(uint64(x.EpochNum))
		}
		l = len(x.BlockHashHex)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Bitmap)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BlsMultiSig)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*RawCheckpointResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.BlsMultiSig) > 0 {
			i -= len(x.BlsMultiSig)
			copy(dAtA[i:], x.BlsMultiSig)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BlsMultiSig)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Bitmap) > 0 {
			i -= len(x.Bitmap)
			copy(dAtA[i:], x.Bitmap)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Bitmap)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.BlockHashHex) > 0 {
			i -= len(x.BlockHashHex)
			copy(dAtA[i:], x.BlockHashHex)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BlockHashHex)))
			i--
			dAtA[i] = 0x12
		}
		if x.EpochNum != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EpochNum))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*RawCheckpointResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RawCheckpointResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RawCheckpointResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EpochNum", wireType)
				}
				x.EpochNum = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EpochNum |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHashHex", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BlockHashHex = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Bitmap", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Bitmap = append(x.Bitmap[:0], dAtA[iNdEx:postIndex]...)
				if x.Bitmap == nil {
					x.Bitmap = []byte{}
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlsMultiSig", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BlsMultiSig = append(x.BlsMultiSig[:0], dAtA[iNdEx:postIndex]...)
				if x.BlsMultiSig == nil {
					x.BlsMultiSig = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_CheckpointStateUpdateResponse              protoreflect.MessageDescriptor
	fd_CheckpointStateUpdateResponse_state        protoreflect.FieldDescriptor
	fd_CheckpointStateUpdateResponse_status_desc  protoreflect.FieldDescriptor
	fd_CheckpointStateUpdateResponse_block_height protoreflect.FieldDescriptor
	fd_CheckpointStateUpdateResponse_block_time   protoreflect.FieldDescriptor
)

func init() {
	file_hetu_checkpointing_v1_query_proto_init()
	md_CheckpointStateUpdateResponse = File_hetu_checkpointing_v1_query_proto.Messages().ByName("CheckpointStateUpdateResponse")
	fd_CheckpointStateUpdateResponse_state = md_CheckpointStateUpdateResponse.Fields().ByName("state")
	fd_CheckpointStateUpdateResponse_status_desc = md_CheckpointStateUpdateResponse.Fields().ByName("status_desc")
	fd_CheckpointStateUpdateResponse_block_height = md_CheckpointStateUpdateResponse.Fields().ByName("block_height")
	fd_CheckpointStateUpdateResponse_block_time = md_CheckpointStateUpdateResponse.Fields().ByName("block_time")
}

var _ protoreflect.Message = (*fastReflection_CheckpointStateUpdateResponse)(nil)

type fastReflection_CheckpointStateUpdateResponse CheckpointStateUpdateResponse

func (x *CheckpointStateUpdateResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_CheckpointStateUpdateResponse)(x)
}

func (x *CheckpointStateUpdateResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_CheckpointStateUpdateResponse_messageType fastReflection_CheckpointStateUpdateResponse_messageType
var _ protoreflect.MessageType = fastReflection_CheckpointStateUpdateResponse_messageType{}

type fastReflection_CheckpointStateUpdateResponse_messageType struct{}

func (x fastReflection_CheckpointStateUpdateResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_CheckpointStateUpdateResponse)(nil)
}
func (x fastReflection_CheckpointStateUpdateResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_CheckpointStateUpdateResponse)
}
func (x fastReflection_CheckpointStateUpdateResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_CheckpointStateUpdateResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_CheckpointStateUpdateResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_CheckpointStateUpdateResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_CheckpointStateUpdateResponse) Type() protoreflect.MessageType {
	return _fastReflection_CheckpointStateUpdateResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_CheckpointStateUpdateResponse) New() protoreflect.Message {
	return new(fastReflection_CheckpointStateUpdateResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_CheckpointStateUpdateResponse) Interface() protoreflect.ProtoMessage {
	return (*CheckpointStateUpdateResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_CheckpointStateUpdateResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.State != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.State))
		if !f(fd_CheckpointStateUpdateResponse_state, value) {
			return
		}
	}
	if x.StatusDesc != "" {
		value := protoreflect.ValueOfString(x.StatusDesc)
		if !f(fd_CheckpointStateUpdateResponse_status_desc, value) {
			return
		}
	}
	if x.BlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlockHeight)
		if !f(fd_CheckpointStateUpdateResponse_block_height, value) {
			return
		}
	}
	if x.BlockTime != nil {
		value := protoreflect.ValueOfMessage(x.BlockTime.ProtoReflect())
		if !f(fd_CheckpointStateUpdateResponse_block_time, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_CheckpointStateUpdateResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.state":
		return x.State != 0
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.status_desc":
		return x.StatusDesc != ""
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.block_height":
		return x.BlockHeight != uint64(0)
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.block_time":
		return x.BlockTime != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.CheckpointStateUpdateResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.CheckpointStateUpdateResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CheckpointStateUpdateResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.state":
		x.State = 0
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.status_desc":
		x.StatusDesc = ""
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.block_height":
		x.BlockHeight = uint64(0)
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.block_time":
		x.BlockTime = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.CheckpointStateUpdateResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.CheckpointStateUpdateResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_CheckpointStateUpdateResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.state":
		value := x.State
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.status_desc":
		value := x.StatusDesc
		return protoreflect.ValueOfString(value)
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfUint64(value)
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.block_time":
		value := x.BlockTime
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.CheckpointStateUpdateResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.CheckpointStateUpdateResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CheckpointStateUpdateResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.state":
		x.State = (CheckpointStatus)(value.Enum())
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.status_desc":
		x.StatusDesc = value.Interface().(string)
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.block_height":
		x.BlockHeight = value.Uint()
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.block_time":
		x.BlockTime = value.Message().Interface().(*timestamppb.Timestamp)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.CheckpointStateUpdateResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.CheckpointStateUpdateResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CheckpointStateUpdateResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.block_time":
		if x.BlockTime == nil {
			x.BlockTime = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.BlockTime.ProtoReflect())
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.state":
		panic(fmt.Errorf("field state of message hetu.checkpointing.v1.CheckpointStateUpdateResponse is not mutable"))
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.status_desc":
		panic(fmt.Errorf("field status_desc of message hetu.checkpointing.v1.CheckpointStateUpdateResponse is not mutable"))
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.block_height":
		panic(fmt.Errorf("field block_height of message hetu.checkpointing.v1.CheckpointStateUpdateResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.CheckpointStateUpdateResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.CheckpointStateUpdateResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_CheckpointStateUpdateResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.state":
		return protoreflect.ValueOfEnum(0)
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.status_desc":
		return protoreflect.ValueOfString("")
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.block_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "hetu.checkpointing.v1.CheckpointStateUpdateResponse.block_time":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.CheckpointStateUpdateResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.CheckpointStateUpdateResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_CheckpointStateUpdateResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in hetu.checkpointing.v1.CheckpointStateUpdateResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_CheckpointStateUpdateResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CheckpointStateUpdateResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_CheckpointStateUpdateResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_CheckpointStateUpdateResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*CheckpointStateUpdateResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.State != 0 {
			n += 1 + runtime.Sov(uint64(x.State))
		}
		l = len(x.StatusDesc)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.BlockTime != nil {
			l = options.Size(x.BlockTime)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*CheckpointStateUpdateResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockTime != nil {
			encoded, err := options.Marshal(x.BlockTime)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x18
		}
		if len(x.StatusDesc) > 0 {
			i -= len(x.StatusDesc)
			copy(dAtA[i:], x.StatusDesc)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.StatusDesc)))
			i--
			dAtA[i] = 0x12
		}
		if x.State != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.State))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*CheckpointStateUpdateResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CheckpointStateUpdateResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CheckpointStateUpdateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
				}
				x.State = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.State |= CheckpointStatus(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StatusDesc", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StatusDesc = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockTime", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.BlockTime == nil {
					x.BlockTime = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BlockTime); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_RawCheckpointWithMetaResponse_6_list)(nil)

type _RawCheckpointWithMetaResponse_6_list struct {
	list *[]*CheckpointStateUpdateResponse
}

func (x *_RawCheckpointWithMetaResponse_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_RawCheckpointWithMetaResponse_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_RawCheckpointWithMetaResponse_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CheckpointStateUpdateResponse)
	(*x.list)[i] = concreteValue
}

func (x *_RawCheckpointWithMetaResponse_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CheckpointStateUpdateResponse)
	*x.list = append(*x.list, concreteValue)
}

func (x *_RawCheckpointWithMetaResponse_6_list) AppendMutable() protoreflect.Value {
	v := new(CheckpointStateUpdateResponse)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_RawCheckpointWithMetaResponse_6_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_RawCheckpointWithMetaResponse_6_list) NewElement() protoreflect.Value {
	v := new(CheckpointStateUpdateResponse)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_RawCheckpointWithMetaResponse_6_list) IsValid() bool {
	return x.list != nil
}

var (
	md_RawCheckpointWithMetaResponse             protoreflect.MessageDescriptor
	fd_RawCheckpointWithMetaResponse_ckpt        protoreflect.FieldDescriptor
	fd_RawCheckpointWithMetaResponse_status      protoreflect.FieldDescriptor
	fd_RawCheckpointWithMetaResponse_status_desc protoreflect.FieldDescriptor
	fd_RawCheckpointWithMetaResponse_bls_aggr_pk protoreflect.FieldDescriptor
	fd_RawCheckpointWithMetaResponse_power_sum   protoreflect.FieldDescriptor
	fd_RawCheckpointWithMetaResponse_lifecycle   protoreflect.FieldDescriptor
)

func init() {
	file_hetu_checkpointing_v1_query_proto_init()
	md_RawCheckpointWithMetaResponse = File_hetu_checkpointing_v1_query_proto.Messages().ByName("RawCheckpointWithMetaResponse")
	fd_RawCheckpointWithMetaResponse_ckpt = md_RawCheckpointWithMetaResponse.Fields().ByName("ckpt")
	fd_RawCheckpointWithMetaResponse_status = md_RawCheckpointWithMetaResponse.Fields().ByName("status")
	fd_RawCheckpointWithMetaResponse_status_desc = md_RawCheckpointWithMetaResponse.Fields().ByName("status_desc")
	fd_RawCheckpointWithMetaResponse_bls_aggr_pk = md_RawCheckpointWithMetaResponse.Fields().ByName("bls_aggr_pk")
	fd_RawCheckpointWithMetaResponse_power_sum = md_RawCheckpointWithMetaResponse.Fields().ByName("power_sum")
	fd_RawCheckpointWithMetaResponse_lifecycle = md_RawCheckpointWithMetaResponse.Fields().ByName("lifecycle")
}

var _ protoreflect.Message = (*fastReflection_RawCheckpointWithMetaResponse)(nil)

type fastReflection_RawCheckpointWithMetaResponse RawCheckpointWithMetaResponse

func (x *RawCheckpointWithMetaResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_RawCheckpointWithMetaResponse)(x)
}

func (x *RawCheckpointWithMetaResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_RawCheckpointWithMetaResponse_messageType fastReflection_RawCheckpointWithMetaResponse_messageType
var _ protoreflect.MessageType = fastReflection_RawCheckpointWithMetaResponse_messageType{}

type fastReflection_RawCheckpointWithMetaResponse_messageType struct{}

func (x fastReflection_RawCheckpointWithMetaResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_RawCheckpointWithMetaResponse)(nil)
}
func (x fastReflection_RawCheckpointWithMetaResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_RawCheckpointWithMetaResponse)
}
func (x fastReflection_RawCheckpointWithMetaResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_RawCheckpointWithMetaResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_RawCheckpointWithMetaResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_RawCheckpointWithMetaResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_RawCheckpointWithMetaResponse) Type() protoreflect.MessageType {
	return _fastReflection_RawCheckpointWithMetaResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_RawCheckpointWithMetaResponse) New() protoreflect.Message {
	return new(fastReflection_RawCheckpointWithMetaResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_RawCheckpointWithMetaResponse) Interface() protoreflect.ProtoMessage {
	return (*RawCheckpointWithMetaResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_RawCheckpointWithMetaResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Ckpt != nil {
		value := protoreflect.ValueOfMessage(x.Ckpt.ProtoReflect())
		if !f(fd_RawCheckpointWithMetaResponse_ckpt, value) {
			return
		}
	}
	if x.Status != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Status))
		if !f(fd_RawCheckpointWithMetaResponse_status, value) {
			return
		}
	}
	if x.StatusDesc != "" {
		value := protoreflect.ValueOfString(x.StatusDesc)
		if !f(fd_RawCheckpointWithMetaResponse_status_desc, value) {
			return
		}
	}
	if len(x.BlsAggrPk) != 0 {
		value := protoreflect.ValueOfBytes(x.BlsAggrPk)
		if !f(fd_RawCheckpointWithMetaResponse_bls_aggr_pk, value) {
			return
		}
	}
	if x.PowerSum != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PowerSum)
		if !f(fd_RawCheckpointWithMetaResponse_power_sum, value) {
			return
		}
	}
	if len(x.Lifecycle) != 0 {
		value := protoreflect.ValueOfList(&_RawCheckpointWithMetaResponse_6_list{list: &x.Lifecycle})
		if !f(fd_RawCheckpointWithMetaResponse_lifecycle, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_RawCheckpointWithMetaResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.ckpt":
		return x.Ckpt != nil
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.status":
		return x.Status != 0
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.status_desc":
		return x.StatusDesc != ""
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.bls_aggr_pk":
		return len(x.BlsAggrPk) != 0
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.power_sum":
		return x.PowerSum != uint64(0)
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.lifecycle":
		return len(x.Lifecycle) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.RawCheckpointWithMetaResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.RawCheckpointWithMetaResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RawCheckpointWithMetaResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.ckpt":
		x.Ckpt = nil
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.status":
		x.Status = 0
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.status_desc":
		x.StatusDesc = ""
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.bls_aggr_pk":
		x.BlsAggrPk = nil
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.power_sum":
		x.PowerSum = uint64(0)
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.lifecycle":
		x.Lifecycle = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.RawCheckpointWithMetaResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.RawCheckpointWithMetaResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_RawCheckpointWithMetaResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.ckpt":
		value := x.Ckpt
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.status":
		value := x.Status
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.status_desc":
		value := x.StatusDesc
		return protoreflect.ValueOfString(value)
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.bls_aggr_pk":
		value := x.BlsAggrPk
		return protoreflect.ValueOfBytes(value)
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.power_sum":
		value := x.PowerSum
		return protoreflect.ValueOfUint64(value)
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.lifecycle":
		if len(x.Lifecycle) == 0 {
			return protoreflect.ValueOfList(&_RawCheckpointWithMetaResponse_6_list{})
		}
		listValue := &_RawCheckpointWithMetaResponse_6_list{list: &x.Lifecycle}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.RawCheckpointWithMetaResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.RawCheckpointWithMetaResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RawCheckpointWithMetaResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.ckpt":
		x.Ckpt = value.Message().Interface().(*RawCheckpointResponse)
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.status":
		x.Status = (CheckpointStatus)(value.Enum())
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.status_desc":
		x.StatusDesc = value.Interface().(string)
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.bls_aggr_pk":
		x.BlsAggrPk = value.Bytes()
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.power_sum":
		x.PowerSum = value.Uint()
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.lifecycle":
		lv := value.List()
		clv := lv.(*_RawCheckpointWithMetaResponse_6_list)
		x.Lifecycle = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.RawCheckpointWithMetaResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.RawCheckpointWithMetaResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RawCheckpointWithMetaResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.ckpt":
		if x.Ckpt == nil {
			x.Ckpt = new(RawCheckpointResponse)
		}
		return protoreflect.ValueOfMessage(x.Ckpt.ProtoReflect())
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.lifecycle":
		if x.Lifecycle == nil {
			x.Lifecycle = []*CheckpointStateUpdateResponse{}
		}
		value := &_RawCheckpointWithMetaResponse_6_list{list: &x.Lifecycle}
		return protoreflect.ValueOfList(value)
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.status":
		panic(fmt.Errorf("field status of message hetu.checkpointing.v1.RawCheckpointWithMetaResponse is not mutable"))
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.status_desc":
		panic(fmt.Errorf("field status_desc of message hetu.checkpointing.v1.RawCheckpointWithMetaResponse is not mutable"))
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.bls_aggr_pk":
		panic(fmt.Errorf("field bls_aggr_pk of message hetu.checkpointing.v1.RawCheckpointWithMetaResponse is not mutable"))
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.power_sum":
		panic(fmt.Errorf("field power_sum of message hetu.checkpointing.v1.RawCheckpointWithMetaResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.RawCheckpointWithMetaResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.RawCheckpointWithMetaResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_RawCheckpointWithMetaResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.ckpt":
		m := new(RawCheckpointResponse)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.status":
		return protoreflect.ValueOfEnum(0)
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.status_desc":
		return protoreflect.ValueOfString("")
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.bls_aggr_pk":
		return protoreflect.ValueOfBytes(nil)
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.power_sum":
		return protoreflect.ValueOfUint64(uint64(0))
	case "hetu.checkpointing.v1.RawCheckpointWithMetaResponse.lifecycle":
		list := []*CheckpointStateUpdateResponse{}
		return protoreflect.ValueOfList(&_RawCheckpointWithMetaResponse_6_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hetu.checkpointing.v1.RawCheckpointWithMetaResponse"))
		}
		panic(fmt.Errorf("message hetu.checkpointing.v1.RawCheckpointWithMetaResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_RawCheckpointWithMetaResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in hetu.checkpointing.v1.RawCheckpointWithMetaResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_RawCheckpointWithMetaResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RawCheckpointWithMetaResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_RawCheckpointWithMetaResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_RawCheckpointWithMetaResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*RawCheckpointWithMetaResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Ckpt != nil {
			l = options.Size(x.Ckpt)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		l = len(x.StatusDesc)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BlsAggrPk)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.PowerSum != 0 {
			n += 1 + runtime.Sov(uint64(x.PowerSum))
		}
		if len(x.Lifecycle) > 0 {
			for _, e := range x.Lifecycle {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*RawCheckpointWithMetaResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Lifecycle) > 0 {
			for iNdEx := len(x.Lifecycle) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Lifecycle[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x32
			}
		}
		if x.PowerSum != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PowerSum))
			i--
			dAtA[i] = 0x28
		}
		if len(x.BlsAggrPk) > 0 {
			i -= len(x.BlsAggrPk)
			copy(dAtA[i:], x.BlsAggrPk)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BlsAggrPk)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.StatusDesc) > 0 {
			i -= len(x.StatusDesc)
			copy(dAtA[i:], x.StatusDesc)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.StatusDesc)))
			i--
			dAtA[i] = 0x1a
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x10
		}
		if x.Ckpt != nil {
			encoded, err := options.Marshal(x.Ckpt)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*RawCheckpointWithMetaResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RawCheckpointWithMetaResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RawCheckpointWithMetaResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Ckpt", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Ckpt == nil {
					x.Ckpt = &RawCheckpointResponse{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Ckpt); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= CheckpointStatus(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StatusDesc", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StatusDesc = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlsAggrPk", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BlsAggrPk = append(x.BlsAggrPk[:0], dAtA[iNdEx:postIndex]...)
				if x.BlsAggrPk == nil {
					x.BlsAggrPk = []byte{}
				}
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PowerSum", wireType)
				}
				x.PowerSum = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PowerSum |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Lifecycle", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Lifecycle = append(x.Lifecycle, &CheckpointStateUpdateResponse{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Lifecycle[len(x.Lifecycle)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: hetu/checkpointing/v1/query.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// QueryRawCheckpointListRequest is the request type for the
// Query/RawCheckpoints RPC method.
type QueryRawCheckpointListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// status defines the status of the raw checkpoints of the query
	Status CheckpointStatus `protobuf:"varint,1,opt,name=status,proto3,enum=hetu.checkpointing.v1.CheckpointStatus" json:"status,omitempty"`
	// pagination defines an optional pagination for the request.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryRawCheckpointListRequest) Reset() {
	*x = QueryRawCheckpointListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRawCheckpointListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRawCheckpointListRequest) ProtoMessage() {}

// Deprecated: Use QueryRawCheckpointListRequest.ProtoReflect.Descriptor instead.
func (*QueryRawCheckpointListRequest) Descriptor() ([]byte, []int) {
	return file_hetu_checkpointing_v1_query_proto_rawDescGZIP(), []int{0}
}

func (x *QueryRawCheckpointListRequest) GetStatus() CheckpointStatus {
	if x != nil {
		return x.Status
	}
	return CheckpointStatus_CKPT_STATUS_ACCUMULATING
}

func (x *QueryRawCheckpointListRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// QueryRawCheckpointListResponse is the response type for the
// Query/RawCheckpoints RPC method.
type QueryRawCheckpointListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the order is going from the newest to oldest based on the epoch number
	RawCheckpoints []*RawCheckpointWithMetaResponse `protobuf:"bytes,1,rep,name=raw_checkpoints,json=rawCheckpoints,proto3" json:"raw_checkpoints,omitempty"`
	// pagination defines the pagination in the response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryRawCheckpointListResponse) Reset() {
	*x = QueryRawCheckpointListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRawCheckpointListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRawCheckpointListResponse) ProtoMessage() {}

// Deprecated: Use QueryRawCheckpointListResponse.ProtoReflect.Descriptor instead.
func (*QueryRawCheckpointListResponse) Descriptor() ([]byte, []int) {
	return file_hetu_checkpointing_v1_query_proto_rawDescGZIP(), []int{1}
}

func (x *QueryRawCheckpointListResponse) GetRawCheckpoints() []*RawCheckpointWithMetaResponse {
	if x != nil {
		return x.RawCheckpoints
	}
	return nil
}

func (x *QueryRawCheckpointListResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// QueryRawCheckpointRequest is the request type for the Query/RawCheckpoint
// RPC method.
type QueryRawCheckpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// epoch_num defines the epoch for the queried checkpoint
	EpochNum uint64 `protobuf:"varint,1,opt,name=epoch_num,json=epochNum,proto3" json:"epoch_num,omitempty"`
}

func (x *QueryRawCheckpointRequest) Reset() {
	*x = QueryRawCheckpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRawCheckpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRawCheckpointRequest) ProtoMessage() {}

// Deprecated: Use QueryRawCheckpointRequest.ProtoReflect.Descriptor instead.
func (*QueryRawCheckpointRequest) Descriptor() ([]byte, []int) {
	return file_hetu_checkpointing_v1_query_proto_rawDescGZIP(), []int{2}
}

func (x *QueryRawCheckpointRequest) GetEpochNum() uint64 {
	if x != nil {
		return x.EpochNum
	}
	return 0
}

// QueryRawCheckpointResponse is the response type for the Query/RawCheckpoint
// RPC method.
type QueryRawCheckpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawCheckpoint *RawCheckpointWithMetaResponse `protobuf:"bytes,1,opt,name=raw_checkpoint,json=rawCheckpoint,proto3" json:"raw_checkpoint,omitempty"`
}

func (x *QueryRawCheckpointResponse) Reset() {
	*x = QueryRawCheckpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRawCheckpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRawCheckpointResponse) ProtoMessage() {}

// Deprecated: Use QueryRawCheckpointResponse.ProtoReflect.Descriptor instead.
func (*QueryRawCheckpointResponse) Descriptor() ([]byte, []int) {
	return file_hetu_checkpointing_v1_query_proto_rawDescGZIP(), []int{3}
}

func (x *QueryRawCheckpointResponse) GetRawCheckpoint() *RawCheckpointWithMetaResponse {
	if x != nil {
		return x.RawCheckpoint
	}
	return nil
}

// QueryBlsPublicKeyListRequest is the request type for the Query/BlsPublicKeys
// RPC method.
type QueryBlsPublicKeyListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// epoch_num defines the epoch for the queried bls public keys
	EpochNum uint64 `protobuf:"varint,1,opt,name=epoch_num,json=epochNum,proto3" json:"epoch_num,omitempty"`
	// pagination defines an optional pagination for the request.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryBlsPublicKeyListRequest) Reset() {
	*x = QueryBlsPublicKeyListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBlsPublicKeyListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBlsPublicKeyListRequest) ProtoMessage() {}

// Deprecated: Use QueryBlsPublicKeyListRequest.ProtoReflect.Descriptor instead.
func (*QueryBlsPublicKeyListRequest) Descriptor() ([]byte, []int) {
	return file_hetu_checkpointing_v1_query_proto_rawDescGZIP(), []int{4}
}

func (x *QueryBlsPublicKeyListRequest) GetEpochNum() uint64 {
	if x != nil {
		return x.EpochNum
	}
	return 0
}

func (x *QueryBlsPublicKeyListRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// BlsPublicKeyListResponse couples validator address, voting power, and its bls
// public key
type BlsPublicKeyListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// validator_address is the address of the validator
	ValidatorAddress string `protobuf:"bytes,1,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	// bls_pub_key is the BLS public key of the validator
	BlsPubKeyHex string `protobuf:"bytes,2,opt,name=bls_pub_key_hex,json=blsPubKeyHex,proto3" json:"bls_pub_key_hex,omitempty"`
	// voting_power is the voting power of the validator at the given epoch
	VotingPower uint64 `protobuf:"varint,3,opt,name=voting_power,json=votingPower,proto3" json:"voting_power,omitempty"`
}

func (x *BlsPublicKeyListResponse) Reset() {
	*x = BlsPublicKeyListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlsPublicKeyListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlsPublicKeyListResponse) ProtoMessage() {}

// Deprecated: Use BlsPublicKeyListResponse.ProtoReflect.Descriptor instead.
func (*BlsPublicKeyListResponse) Descriptor() ([]byte, []int) {
	return file_hetu_checkpointing_v1_query_proto_rawDescGZIP(), []int{5}
}

func (x *BlsPublicKeyListResponse) GetValidatorAddress() string {
	if x != nil {
		return x.ValidatorAddress
	}
	return ""
}

func (x *BlsPublicKeyListResponse) GetBlsPubKeyHex() string {
	if x != nil {
		return x.BlsPubKeyHex
	}
	return ""
}

func (x *BlsPublicKeyListResponse) GetVotingPower() uint64 {
	if x != nil {
		return x.VotingPower
	}
	return 0
}

// QueryBlsPublicKeyListResponse is the response type for the
// Query/BlsPublicKeys RPC method.
type QueryBlsPublicKeyListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidatorWithBlsKeys []*BlsPublicKeyListResponse `protobuf:"bytes,1,rep,name=validator_with_bls_keys,json=validatorWithBlsKeys,proto3" json:"validator_with_bls_keys,omitempty"`
	// pagination defines the pagination in the response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryBlsPublicKeyListResponse) Reset() {
	*x = QueryBlsPublicKeyListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBlsPublicKeyListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBlsPublicKeyListResponse) ProtoMessage() {}

// Deprecated: Use QueryBlsPublicKeyListResponse.ProtoReflect.Descriptor instead.
func (*QueryBlsPublicKeyListResponse) Descriptor() ([]byte, []int) {
	return file_hetu_checkpointing_v1_query_proto_rawDescGZIP(), []int{6}
}

func (x *QueryBlsPublicKeyListResponse) GetValidatorWithBlsKeys() []*BlsPublicKeyListResponse {
	if x != nil {
		return x.ValidatorWithBlsKeys
	}
	return nil
}

func (x *QueryBlsPublicKeyListResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// QueryEpochStatusRequest is the request type for the Query/EpochStatus
// RPC method.
type QueryEpochStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpochNum uint64 `protobuf:"varint,1,opt,name=epoch_num,json=epochNum,proto3" json:"epoch_num,omitempty"`
}

func (x *QueryEpochStatusRequest) Reset() {
	*x = QueryEpochStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEpochStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEpochStatusRequest) ProtoMessage() {}

// Deprecated: Use QueryEpochStatusRequest.ProtoReflect.Descriptor instead.
func (*QueryEpochStatusRequest) Descriptor() ([]byte, []int) {
	return file_hetu_checkpointing_v1_query_proto_rawDescGZIP(), []int{7}
}

func (x *QueryEpochStatusRequest) GetEpochNum() uint64 {
	if x != nil {
		return x.EpochNum
	}
	return 0
}

// QueryEpochStatusResponse is the response type for the Query/EpochStatus
// RPC method.
type QueryEpochStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status CheckpointStatus `protobuf:"varint,1,opt,name=status,proto3,enum=hetu.checkpointing.v1.CheckpointStatus" json:"status,omitempty"`
}

func (x *QueryEpochStatusResponse) Reset() {
	*x = QueryEpochStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEpochStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEpochStatusResponse) ProtoMessage() {}

// Deprecated: Use QueryEpochStatusResponse.ProtoReflect.Descriptor instead.
func (*QueryEpochStatusResponse) Descriptor() ([]byte, []int) {
	return file_hetu_checkpointing_v1_query_proto_rawDescGZIP(), []int{8}
}

func (x *QueryEpochStatusResponse) GetStatus() CheckpointStatus {
	if x != nil {
		return x.Status
	}
	return CheckpointStatus_CKPT_STATUS_ACCUMULATING
}

// RawCheckpointResponse wraps the BLS multi sig with metadata
type RawCheckpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// epoch_num defines the epoch number the raw checkpoint is for
	EpochNum uint64 `protobuf:"varint,1,opt,name=epoch_num,json=epochNum,proto3" json:"epoch_num,omitempty"`
	// block_hash_hex defines the 'BlockID.Hash', which is the hash of
	// the block that individual BLS sigs are signed on as hex string
	BlockHashHex string `protobuf:"bytes,2,opt,name=block_hash_hex,json=blockHashHex,proto3" json:"block_hash_hex,omitempty"`
	// bitmap defines the bitmap that indicates the signers of the BLS multi sig
	Bitmap []byte `protobuf:"bytes,3,opt,name=bitmap,proto3" json:"bitmap,omitempty"`
	// bls_multi_sig defines the multi sig that is aggregated from individual BLS
	// sigs
	BlsMultiSig []byte `protobuf:"bytes,4,opt,name=bls_multi_sig,json=blsMultiSig,proto3" json:"bls_multi_sig,omitempty"`
}

func (x *RawCheckpointResponse) Reset() {
	*x = RawCheckpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawCheckpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawCheckpointResponse) ProtoMessage() {}

// Deprecated: Use RawCheckpointResponse.ProtoReflect.Descriptor instead.
func (*RawCheckpointResponse) Descriptor() ([]byte, []int) {
	return file_hetu_checkpointing_v1_query_proto_rawDescGZIP(), []int{9}
}

func (x *RawCheckpointResponse) GetEpochNum() uint64 {
	if x != nil {
		return x.EpochNum
	}
	return 0
}

func (x *RawCheckpointResponse) GetBlockHashHex() string {
	if x != nil {
		return x.BlockHashHex
	}
	return ""
}

func (x *RawCheckpointResponse) GetBitmap() []byte {
	if x != nil {
		return x.Bitmap
	}
	return nil
}

func (x *RawCheckpointResponse) GetBlsMultiSig() []byte {
	if x != nil {
		return x.BlsMultiSig
	}
	return nil
}

// CheckpointStateUpdateResponse defines a state transition on the checkpoint.
type CheckpointStateUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// state defines the event of a state transition towards this state
	State CheckpointStatus `protobuf:"varint,1,opt,name=state,proto3,enum=hetu.checkpointing.v1.CheckpointStatus" json:"state,omitempty"`
	// status_desc represents the description of status enum.
	StatusDesc string `protobuf:"bytes,2,opt,name=status_desc,json=statusDesc,proto3" json:"status_desc,omitempty"`
	// block_height is the height of the Hetu block that triggers the state
	// update
	BlockHeight uint64 `protobuf:"varint,3,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	// block_time is the timestamp in the Hetu block that triggers the state
	// update
	BlockTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
}

func (x *CheckpointStateUpdateResponse) Reset() {
	*x = CheckpointStateUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckpointStateUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointStateUpdateResponse) ProtoMessage() {}

// Deprecated: Use CheckpointStateUpdateResponse.ProtoReflect.Descriptor instead.
func (*CheckpointStateUpdateResponse) Descriptor() ([]byte, []int) {
	return file_hetu_checkpointing_v1_query_proto_rawDescGZIP(), []int{10}
}

func (x *CheckpointStateUpdateResponse) GetState() CheckpointStatus {
	if x != nil {
		return x.State
	}
	return CheckpointStatus_CKPT_STATUS_ACCUMULATING
}

func (x *CheckpointStateUpdateResponse) GetStatusDesc() string {
	if x != nil {
		return x.StatusDesc
	}
	return ""
}

func (x *CheckpointStateUpdateResponse) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *CheckpointStateUpdateResponse) GetBlockTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BlockTime
	}
	return nil
}

// RawCheckpointWithMetaResponse wraps the raw checkpoint with metadata.
type RawCheckpointWithMetaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ckpt *RawCheckpointResponse `protobuf:"bytes,1,opt,name=ckpt,proto3" json:"ckpt,omitempty"`
	// status defines the status of the checkpoint
	Status CheckpointStatus `protobuf:"varint,2,opt,name=status,proto3,enum=hetu.checkpointing.v1.CheckpointStatus" json:"status,omitempty"`
	// status_desc represents the description of status enum.
	StatusDesc string `protobuf:"bytes,3,opt,name=status_desc,json=statusDesc,proto3" json:"status_desc,omitempty"`
	// bls_aggr_pk defines the aggregated BLS public key
	BlsAggrPk []byte `protobuf:"bytes,4,opt,name=bls_aggr_pk,json=blsAggrPk,proto3" json:"bls_aggr_pk,omitempty"`
	// power_sum defines the accumulated voting power for the checkpoint
	PowerSum uint64 `protobuf:"varint,5,opt,name=power_sum,json=powerSum,proto3" json:"power_sum,omitempty"`
	// lifecycle defines the lifecycle of this checkpoint, i.e., each state
	// transition and the time (in both timestamp and block height) of this
	// transition.
	Lifecycle []*CheckpointStateUpdateResponse `protobuf:"bytes,6,rep,name=lifecycle,proto3" json:"lifecycle,omitempty"`
}

func (x *RawCheckpointWithMetaResponse) Reset() {
	*x = RawCheckpointWithMetaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hetu_checkpointing_v1_query_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawCheckpointWithMetaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawCheckpointWithMetaResponse) ProtoMessage() {}

// Deprecated: Use RawCheckpointWithMetaResponse.ProtoReflect.Descriptor instead.
func (*RawCheckpointWithMetaResponse) Descriptor() ([]byte, []int) {
	return file_hetu_checkpointing_v1_query_proto_rawDescGZIP(), []int{11}
}

func (x *RawCheckpointWithMetaResponse) GetCkpt() *RawCheckpointResponse {
	if x != nil {
		return x.Ckpt
	}
	return nil
}

func (x *RawCheckpointWithMetaResponse) GetStatus() CheckpointStatus {
	if x != nil {
		return x.Status
	}
	return CheckpointStatus_CKPT_STATUS_ACCUMULATING
}

func (x *RawCheckpointWithMetaResponse) GetStatusDesc() string {
	if x != nil {
		return x.StatusDesc
	}
	return ""
}

func (x *RawCheckpointWithMetaResponse) GetBlsAggrPk() []byte {
	if x != nil {
		return x.BlsAggrPk
	}
	return nil
}

func (x *RawCheckpointWithMetaResponse) GetPowerSum() uint64 {
	if x != nil {
		return x.PowerSum
	}
	return 0
}

func (x *RawCheckpointWithMetaResponse) GetLifecycle() []*CheckpointStateUpdateResponse {
	if x != nil {
		return x.Lifecycle
	}
	return nil
}

var File_hetu_checkpointing_v1_query_proto protoreflect.FileDescriptor

var file_hetu_checkpointing_v1_query_proto_rawDesc = []byte{
	0x0a, 0x21, 0x68, 0x65, 0x74, 0x75, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x15, 0x68, 0x65, 0x74, 0x75, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x26, 0x68, 0x65, 0x74, 0x75, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f,
	0x62, 0x61, 0x73, 0x65, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xa8, 0x01, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x61, 0x77,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x68, 0x65, 0x74, 0x75, 0x2e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc8,
	0x01, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x61, 0x77, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5d, 0x0a, 0x0f, 0x72, 0x61, 0x77, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x68, 0x65, 0x74,
	0x75, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x61, 0x77, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0e, 0x72, 0x61, 0x77, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x19, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x61, 0x77, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x65, 0x70, 0x6f, 0x63, 0x68,
	0x4e, 0x75, 0x6d, 0x22, 0x79, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x61, 0x77, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x72, 0x61, 0x77, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x68, 0x65, 0x74, 0x75,
	0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x61, 0x77, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0d, 0x72, 0x61, 0x77, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x83,
	0x01, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x6c, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x12, 0x46, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x91, 0x01, 0x0a, 0x18, 0x42, 0x6c, 0x73, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2b, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25,
	0x0a, 0x0f, 0x62, 0x6c, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x68, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x6c, 0x73, 0x50, 0x75, 0x62, 0x4b,
	0x65, 0x79, 0x48, 0x65, 0x78, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x76, 0x6f, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x22, 0xd0, 0x01, 0x0a, 0x1d, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x42, 0x6c, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x17, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x62, 0x6c, 0x73,
	0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x68, 0x65,
	0x74, 0x75, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x14, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x57, 0x69, 0x74, 0x68, 0x42, 0x6c, 0x73, 0x4b, 0x65,
	0x79, 0x73, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x36, 0x0a, 0x17, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x65, 0x70, 0x6f, 0x63, 0x68,
	0x4e, 0x75, 0x6d, 0x22, 0x5b, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x70, 0x6f, 0x63,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x27, 0x2e, 0x68, 0x65, 0x74, 0x75, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xd5, 0x01, 0x0a, 0x15, 0x52, 0x61, 0x77, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x68, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x48, 0x65, 0x78, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62,
	0x69, 0x74, 0x6d, 0x61, 0x70, 0x12, 0x61, 0x0a, 0x0d, 0x62, 0x6c, 0x73, 0x5f, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x5f, 0x73, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x3d, 0xda, 0xde,
	0x1f, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x65, 0x74,
	0x75, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x68, 0x65, 0x74, 0x75, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x62, 0x6c, 0x73, 0x31, 0x32, 0x33, 0x38,
	0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0b, 0x62, 0x6c, 0x73,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x69, 0x67, 0x22, 0xe3, 0x01, 0x0a, 0x1d, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x68, 0x65, 0x74, 0x75,
	0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x73, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x3f, 0x0a,
	0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0x90,
	0xdf, 0x1f, 0x01, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x93,
	0x03, 0x0a, 0x1d, 0x52, 0x61, 0x77, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x04, 0x63, 0x6b, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x68, 0x65, 0x74, 0x75, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x77, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x63, 0x6b,
	0x70, 0x74, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x27, 0x2e, 0x68, 0x65, 0x74, 0x75, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x44, 0x65, 0x73, 0x63, 0x12, 0x5d, 0x0a, 0x0b, 0x62, 0x6c, 0x73, 0x5f, 0x61, 0x67, 0x67, 0x72,
	0x5f, 0x70, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x3d, 0xda, 0xde, 0x1f, 0x39, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x65, 0x74, 0x75, 0x2d, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x68, 0x65, 0x74, 0x75, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x62, 0x6c, 0x73, 0x31, 0x32, 0x33, 0x38, 0x31, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x09, 0x62, 0x6c, 0x73, 0x41, 0x67, 0x67,
	0x72, 0x50, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x75, 0x6d,
	0x12, 0x52, 0x0a, 0x09, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x68, 0x65, 0x74, 0x75, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x6c, 0x69, 0x66, 0x65, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x32, 0xdc, 0x05, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0xb9,
	0x01, 0x0a, 0x11, 0x52, 0x61, 0x77, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x2e, 0x68, 0x65, 0x74, 0x75, 0x2e, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x61, 0x77, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x68, 0x65, 0x74,
	0x75, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x61, 0x77, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x12, 0x2f, 0x2f, 0x68, 0x65, 0x74, 0x75,
	0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x61, 0x77, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x2f, 0x7b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x7d, 0x12, 0xaf, 0x01, 0x0a, 0x0d, 0x52,
	0x61, 0x77, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x30, 0x2e, 0x68,
	0x65, 0x74, 0x75, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x61, 0x77, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31,
	0x2e, 0x68, 0x65, 0x74, 0x75, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x61, 0x77, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x12, 0x31, 0x2f, 0x68, 0x65, 0x74, 0x75,
	0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x61, 0x77, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x2f, 0x7b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x7d, 0x12, 0xb9, 0x01, 0x0a,
	0x10, 0x42, 0x6c, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x33, 0x2e, 0x68, 0x65, 0x74, 0x75, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42,
	0x6c, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x68, 0x65, 0x74, 0x75, 0x2e, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x42, 0x6c, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x34, 0x12, 0x32, 0x2f, 0x68, 0x65, 0x74, 0x75, 0x2f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6c, 0x73,
	0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x2f, 0x7b, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x7d, 0x12, 0xa8, 0x01, 0x0a, 0x0b, 0x45, 0x70, 0x6f,
	0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x2e, 0x68, 0x65, 0x74, 0x75, 0x2e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x68, 0x65, 0x74, 0x75, 0x2e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x32, 0x12, 0x30, 0x2f, 0x68, 0x65, 0x74, 0x75, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x73,
	0x2f, 0x7b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x7d, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0xd5, 0x01, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x65, 0x74, 0x75,
	0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x42, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x36, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x68, 0x65, 0x74, 0x75, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x69, 0x6e, 0x67, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x48, 0x43, 0x58, 0xaa, 0x02, 0x15,
	0x48, 0x65, 0x74, 0x75, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x15, 0x48, 0x65, 0x74, 0x75, 0x5c, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x21,
	0x48, 0x65, 0x74, 0x75, 0x5c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x17, 0x48, 0x65, 0x74, 0x75, 0x3a, 0x3a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_hetu_checkpointing_v1_query_proto_rawDescOnce sync.Once
	file_hetu_checkpointing_v1_query_proto_rawDescData = file_hetu_checkpointing_v1_query_proto_rawDesc
)

func file_hetu_checkpointing_v1_query_proto_rawDescGZIP() []byte {
	file_hetu_checkpointing_v1_query_proto_rawDescOnce.Do(func() {
		file_hetu_checkpointing_v1_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_hetu_checkpointing_v1_query_proto_rawDescData)
	})
	return file_hetu_checkpointing_v1_query_proto_rawDescData
}

var file_hetu_checkpointing_v1_query_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_hetu_checkpointing_v1_query_proto_goTypes = []interface{}{
	(*QueryRawCheckpointListRequest)(nil),  // 0: hetu.checkpointing.v1.QueryRawCheckpointListRequest
	(*QueryRawCheckpointListResponse)(nil), // 1: hetu.checkpointing.v1.QueryRawCheckpointListResponse
	(*QueryRawCheckpointRequest)(nil),      // 2: hetu.checkpointing.v1.QueryRawCheckpointRequest
	(*QueryRawCheckpointResponse)(nil),     // 3: hetu.checkpointing.v1.QueryRawCheckpointResponse
	(*QueryBlsPublicKeyListRequest)(nil),   // 4: hetu.checkpointing.v1.QueryBlsPublicKeyListRequest
	(*BlsPublicKeyListResponse)(nil),       // 5: hetu.checkpointing.v1.BlsPublicKeyListResponse
	(*QueryBlsPublicKeyListResponse)(nil),  // 6: hetu.checkpointing.v1.QueryBlsPublicKeyListResponse
	(*QueryEpochStatusRequest)(nil),        // 7: hetu.checkpointing.v1.QueryEpochStatusRequest
	(*QueryEpochStatusResponse)(nil),       // 8: hetu.checkpointing.v1.QueryEpochStatusResponse
	(*RawCheckpointResponse)(nil),          // 9: hetu.checkpointing.v1.RawCheckpointResponse
	(*CheckpointStateUpdateResponse)(nil),  // 10: hetu.checkpointing.v1.CheckpointStateUpdateResponse
	(*RawCheckpointWithMetaResponse)(nil),  // 11: hetu.checkpointing.v1.RawCheckpointWithMetaResponse
	(CheckpointStatus)(0),                  // 12: hetu.checkpointing.v1.CheckpointStatus
	(*v1beta1.PageRequest)(nil),            // 13: cosmos.base.query.v1beta1.PageRequest
	(*v1beta1.PageResponse)(nil),           // 14: cosmos.base.query.v1beta1.PageResponse
	(*timestamppb.Timestamp)(nil),          // 15: google.protobuf.Timestamp
}
var file_hetu_checkpointing_v1_query_proto_depIdxs = []int32{
	12, // 0: hetu.checkpointing.v1.QueryRawCheckpointListRequest.status:type_name -> hetu.checkpointing.v1.CheckpointStatus
	13, // 1: hetu.checkpointing.v1.QueryRawCheckpointListRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	11, // 2: hetu.checkpointing.v1.QueryRawCheckpointListResponse.raw_checkpoints:type_name -> hetu.checkpointing.v1.RawCheckpointWithMetaResponse
	14, // 3: hetu.checkpointing.v1.QueryRawCheckpointListResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	11, // 4: hetu.checkpointing.v1.QueryRawCheckpointResponse.raw_checkpoint:type_name -> hetu.checkpointing.v1.RawCheckpointWithMetaResponse
	13, // 5: hetu.checkpointing.v1.QueryBlsPublicKeyListRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	5,  // 6: hetu.checkpointing.v1.QueryBlsPublicKeyListResponse.validator_with_bls_keys:type_name -> hetu.checkpointing.v1.BlsPublicKeyListResponse
	14, // 7: hetu.checkpointing.v1.QueryBlsPublicKeyListResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	12, // 8: hetu.checkpointing.v1.QueryEpochStatusResponse.status:type_name -> hetu.checkpointing.v1.CheckpointStatus
	12, // 9: hetu.checkpointing.v1.CheckpointStateUpdateResponse.state:type_name -> hetu.checkpointing.v1.CheckpointStatus
	15, // 10: hetu.checkpointing.v1.CheckpointStateUpdateResponse.block_time:type_name -> google.protobuf.Timestamp
	9,  // 11: hetu.checkpointing.v1.RawCheckpointWithMetaResponse.ckpt:type_name -> hetu.checkpointing.v1.RawCheckpointResponse
	12, // 12: hetu.checkpointing.v1.RawCheckpointWithMetaResponse.status:type_name -> hetu.checkpointing.v1.CheckpointStatus
	10, // 13: hetu.checkpointing.v1.RawCheckpointWithMetaResponse.lifecycle:type_name -> hetu.checkpointing.v1.CheckpointStateUpdateResponse
	0,  // 14: hetu.checkpointing.v1.Query.RawCheckpointList:input_type -> hetu.checkpointing.v1.QueryRawCheckpointListRequest
	2,  // 15: hetu.checkpointing.v1.Query.RawCheckpoint:input_type -> hetu.checkpointing.v1.QueryRawCheckpointRequest
	4,  // 16: hetu.checkpointing.v1.Query.BlsPublicKeyList:input_type -> hetu.checkpointing.v1.QueryBlsPublicKeyListRequest
	7,  // 17: hetu.checkpointing.v1.Query.EpochStatus:input_type -> hetu.checkpointing.v1.QueryEpochStatusRequest
	1,  // 18: hetu.checkpointing.v1.Query.RawCheckpointList:output_type -> hetu.checkpointing.v1.QueryRawCheckpointListResponse
	3,  // 19: hetu.checkpointing.v1.Query.RawCheckpoint:output_type -> hetu.checkpointing.v1.QueryRawCheckpointResponse
	6,  // 20: hetu.checkpointing.v1.Query.BlsPublicKeyList:output_type -> hetu.checkpointing.v1.QueryBlsPublicKeyListResponse
	8,  // 21: hetu.checkpointing.v1.Query.EpochStatus:output_type -> hetu.checkpointing.v1.QueryEpochStatusResponse
	18, // [18:22] is the sub-list for method output_type
	14, // [14:18] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_hetu_checkpointing_v1_query_proto_init() }
func file_hetu_checkpointing_v1_query_proto_init() {
	if File_hetu_checkpointing_v1_query_proto != nil {
		return
	}
	file_hetu_checkpointing_v1_checkpoint_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_hetu_checkpointing_v1_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRawCheckpointListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hetu_checkpointing_v1_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRawCheckpointListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hetu_checkpointing_v1_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRawCheckpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hetu_checkpointing_v1_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRawCheckpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hetu_checkpointing_v1_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBlsPublicKeyListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hetu_checkpointing_v1_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlsPublicKeyListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hetu_checkpointing_v1_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBlsPublicKeyListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hetu_checkpointing_v1_query_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEpochStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hetu_checkpointing_v1_query_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEpochStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hetu_checkpointing_v1_query_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawCheckpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hetu_checkpointing_v1_query_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckpointStateUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hetu_checkpointing_v1_query_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawCheckpointWithMetaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hetu_checkpointing_v1_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hetu_checkpointing_v1_query_proto_goTypes,
		DependencyIndexes: file_hetu_checkpointing_v1_query_proto_depIdxs,
		MessageInfos:      file_hetu_checkpointing_v1_query_proto_msgTypes,
	}.Build()
	File_hetu_checkpointing_v1_query_proto = out.File
	file_hetu_checkpointing_v1_query_proto_rawDesc = nil
	file_hetu_checkpointing_v1_query_proto_goTypes = nil
	file_hetu_checkpointing_v1_query_proto_depIdxs = nil
}
